import{_ as i,c as e,b as s,o as a}from"./app-D8UMlz2N.js";const l="/nodes/os/1.1.png",n="/nodes/os/1.2.png",r="/nodes/os/1.3.png",p="/nodes/os/1.5.png",o="/nodes/os/1.6.png",d="/nodes/os/1.7.png",c="/nodes/os/1.8.png",m="/nodes/os/1.9.png",g="/nodes/os/1.10.png",_="/nodes/os/1.11.png",h="/nodes/os/1.4.png",x="/nodes/os/1.12.png",v="/nodes/os/1.13.png",k={};function f(b,t){return a(),e("div",null,t[0]||(t[0]=[s('<h2 id="_1-感性认识-身边的操作系统" tabindex="-1"><a class="header-anchor" href="#_1-感性认识-身边的操作系统"><span>1. 感性认识：身边的操作系统</span></a></h2><ul><li>Windows</li><li>Linux</li><li>Android</li><li>iOS</li><li>MacOS</li><li>Unix</li><li>DOS</li></ul><div style="text-align:center;"><p><img src="'+l+'" alt="alt text"></p></div><h2 id="_2-操作系统的概念-定义" tabindex="-1"><a class="header-anchor" href="#_2-操作系统的概念-定义"><span>2. 操作系统的概念(定义)</span></a></h2><p>一台电脑的诞生</p><div class="vp-steps"><ol><li><p>Step1<br> 厂家组装一台裸机</p></li><li><p>Step2<br> 出售前安装操作系统</p></li><li><p>Step3<br> 用户安装应用程序(eg:QQ)</p></li><li><p>Step 4<br> 使用 QQ聊天</p></li></ol></div><p>由此我们可以看出计算机系统的层次结构如图：</p><div style="text-align:center;"><p><img src="'+n+'" alt="alt text"></p></div><h3 id="_2-1-操作系统定义" tabindex="-1"><a class="header-anchor" href="#_2-1-操作系统定义"><span>2.1 操作系统定义</span></a></h3><p>操作系统(operatingSystem， OS)是指控制和<mark>管理</mark>整个计算机系统的<mark>硬件和软件</mark>资源，并合理地组织调度计算机的工作和资源的分配;以<mark>提供给用户和其他软件方便的接口和环境</mark>;它是计算机系统中最基本的<mark>系统软件</mark>。<br> 该定义可以分为三部分理解：</p><p><strong>1. 操作系统是系统资源的管理者</strong></p><p>直观的例子：打开 Windows操作系统的“任务管理器”(快捷键:Ctr1+Alt+Del)</p><div style="text-align:center;"><p><img src="'+r+'" alt="alt text"></p></div><ul><li>进程即正在运行的程序、软件，如：微信、QQ，可以说明操作系统对这些程序进行了管理。</li><li>还可以看到这些软件对计算机资源的使用情况，也是在监控的，CPU使用率、内存使用率</li></ul><p>因此，操作系统作为软件和硬件之间的层次，它是系统资源的管理者。</p><p>如何作为系统资源的管理者举例：</p><div style="text-align:center;"><p><img src="'+p+'" alt="alt text"></p></div><p><strong>2. 操作系统向上层提供方便易用的服务</strong></p><div style="text-align:center;"><p><img src="'+o+'" alt="alt text"></p></div><p>总而言之，操作系统屏蔽了硬件的细节，向上层提供易用的服务。那么操作系统向上层提供了哪些易用的服务呢？</p><ol><li>GUI：图形化用户接口(Graphical User Interface) 用户可以使用形象的图形界面进行操作，而不再需要记忆复杂的命令、参数。 例子：在Windows操作系统中，删除一个文件只需要把文件“拖拽”到回收站即可。</li></ol><div style="text-align:center;"><p><img src="'+d+'" alt="alt text"></p></div><ol start="2"><li>联机命令接口（Windows系统）：用户通过cmd窗口输入命令来使用操作系统<br> 联机命令接口=交互式命令接口</li></ol><div style="text-align:center;"><p><img src="'+c+'" alt="alt text"></p></div><ol start="3"><li>脱机命令接口(Windows系统)：用户通过执行批处理命令来使用操作系统 脱机命令接口=批处理命令接口<br> 使用windows系统的搜索功能，搜索C盘中的*.bat文件，用记事本任意打开一个</li></ol><div style="text-align:center;"><p><img src="'+m+'" alt="alt text"></p></div><p>特点：用户说一堆，系统跟着做一堆。</p><ol start="4"><li>程序接口：可以在程序中进行<mark>系统调用</mark>来使用程序接口。普通用户不能直接使用程序接口，只能通过程序代码<mark>间接</mark>使用。 如：写C语言“Hello world”程序时，在printf 函数的底层就使用到了操作系统提供的显式相关的“系统调用”。</li></ol><div style="text-align:center;"><p><img src="'+g+'" alt="alt text"></p></div><p>总结：</p><div style="text-align:center;"><p><img src="'+_+'" alt="alt text"></p></div><p>这些是为什么硬件和用户之间必须有一层操作系统的原因。</p><p><strong>3. 操作系统是最接近硬件的一层软件</strong></p><div style="text-align:center;"><p><img src="'+h+'" alt="alt text"></p></div><p><img src="'+x+'" alt="alt text"> 需要实现<mark>对硬件机器的拓展</mark><br> 没有任何软件支持的计算机成为<mark>裸机</mark>。在裸机上安装的操作系统，可以提供资源管理功能和方便用户的服务功能，将裸机改造成功能更强、使用更方便的机器<br> 通常把覆盖了软件的机器成为<mark>扩充机器</mark>，又称之为<mark>虚拟机</mark></p><div class="hint-container note"><p class="hint-container-title">注</p><p>补充知识：执行一个程序前需要将该程序放到内存中，才能被CPU处理。</p></div><h2 id="操作系统的功能和目标" tabindex="-1"><a class="header-anchor" href="#操作系统的功能和目标"><span>操作系统的功能和目标</span></a></h2><h3 id="_2-1-操作系统的功能" tabindex="-1"><a class="header-anchor" href="#_2-1-操作系统的功能"><span>2.1 操作系统的功能</span></a></h3><ul><li>处理机管理</li><li>内存（存储器）管理</li><li>文件管理</li><li>设备管理</li></ul><p>操作系统这门课重点学的基本上都是操作系统作为系统资源的管理者，如何设计和实现这些功能。</p><h3 id="_2-2-操作系统的目标" tabindex="-1"><a class="header-anchor" href="#_2-2-操作系统的目标"><span>2.2 操作系统的目标</span></a></h3><ul><li>安全</li><li>高效</li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><div style="text-align:center;"><p><img src="'+v+'" alt="alt text"></p></div>',44)]))}const y=i(k,[["render",f],["__file","index.html.vue"]]),S=JSON.parse('{"path":"/os/87wfsd47/","title":"1. 操作系统的概念、功能","lang":"zh-CN","frontmatter":{"title":"1. 操作系统的概念、功能","tags":["OS","408考研","自学考试"],"createTime":"2025/02/24 16:02:28","permalink":"/os/87wfsd47/"},"headers":[],"readingTime":{"minutes":3.47,"words":1041},"git":{},"filePathRelative":"notes/zh/os/1.操作系统概述/1.操作系统的概念、功能.md"}');export{y as comp,S as data};
